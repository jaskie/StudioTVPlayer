<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:attachedProp="clr-namespace:StudioTVPlayer.Helpers.AttachedProperties"
                    >   
    <Style TargetType="{x:Type TabPanel}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5 0"/>
    </Style>
    
    <Style x:Key="ConfigurationLabelStyle" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray5}"/>
    </Style>

    <Style x:Key="ConfigurationComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Margin" Value="5 0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ConfigurationDescriptionComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource ConfigurationComboBoxStyle}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=., Converter={StaticResource DescriptionConverter}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConfigurationCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Margin" Value="5 0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ButtonTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="10 0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Padding" Value="10 0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="RundownItemRoundToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource MahApps.Styles.ToggleButton.Circle}">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style x:Key="RemoveButtonStyle" TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}">
        <Setter Property="Command" Value="{Binding RemoveCommand}"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="ToolTip" Value="Remove"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <mah:FontIcon Glyph="&#xE74D;" FontSize="15"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListenToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ToolTip" Value="Listen for the button press on the controller"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <mah:FontIcon Glyph="&#xF270;" FontSize="16" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="DarkGreen"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="VolumeGaugeStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray5}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Control.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="Root">
                        <Border x:Name="PART_Track"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" >
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0" Color="#FF00FF00"/>
                                    <GradientStop Offset="0.62" Color="#FF00FF00"/>
                                    <GradientStop Offset="0.62" Color="#FFFFFF00"/>
                                    <GradientStop Offset="0.80" Color="#FFFFFF00"/>
                                    <GradientStop Offset="0.80" Color="#FFFF0000"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" x:Name="PART_Indicator"
                                    HorizontalAlignment="Left"/>
                            <Border Grid.Column="1" Background="{TemplateBinding Background}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Root" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SimpleListBoxItemStyle" TargetType="ListBoxItem" BasedOn="{StaticResource MahApps.Styles.ListBoxItem}" >
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="mah:ItemHelper.SelectedBackgroundBrush" Value="Transparent"/>
        <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent"/>
        <Setter Property="mah:ItemHelper.HoverBackgroundBrush" Value="Transparent"/>
        <Setter Property="mah:ItemHelper.HoverSelectedBackgroundBrush" Value="Transparent"/>
    </Style>

    <Style x:Key="StrongFocusIndicatorUserControl" TargetType="UserControl">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="attachedProp:ControlProperties.TakesInputBindingPrecedence" Value="True"/>
        <Setter Property="attachedProp:ControlProperties.EnableIsKeyboardFocusWithin" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Control.Validation}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>