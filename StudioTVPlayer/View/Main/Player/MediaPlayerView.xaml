<UserControl x:Class="StudioTVPlayer.View.Main.Player.MediaPlayerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"             
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:view="clr-namespace:StudioTVPlayer.View.Main.Player"
             xmlns:attachedProp="clr-namespace:StudioTVPlayer.Helpers.AttachedProperties"
             xmlns:controls="clr-namespace:StudioTVPlayer.Controls"
             xmlns:helpers="clr-namespace:StudioTVPlayer.Helpers"             
             xmlns:vm="clr-namespace:StudioTVPlayer.ViewModel.Main.Player"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance vm:MediaPlayerViewModel}"
             d:DesignHeight="370" d:DesignWidth="800"
             Height="370"    
             Focusable="True"
             attachedProp:ControlProperties.IsFocused="{Binding IsFocused}"
             IsTabStop="True"             
             KeyboardNavigation.TabNavigation="Local"
             BorderThickness="4"
             attachedProp:EventToCommand.TakesInputBindingPrecedence="True"
             dd:DragDrop.IsDropTarget="True"
             dd:DragDrop.DropHandler="{Binding}"
             >
    <UserControl.InputBindings>
        <KeyBinding Modifiers="Shift" Key="Left" Command="{Binding SeekFramesCommand}" CommandParameter="-1" />
        <KeyBinding Modifiers="Shift" Key="Right" Command="{Binding SeekFramesCommand}" CommandParameter="1" />
        <KeyBinding Modifiers="CTRL" Key="Left" Command="{Binding SeekFramesCommand}" CommandParameter="-second" />
        <KeyBinding Modifiers="CTRL" Key="Right" Command="{Binding SeekFramesCommand}" CommandParameter="second" />
        <KeyBinding Key="Space" Command="{Binding PlayPauseCommand}" />
        <KeyBinding Key="END" Command="{Binding NextCommand}" />
        <KeyBinding Key="Pause" Command="{Binding StopCommand}" />
        <KeyBinding Modifiers="CTRL" Key="Delete" Command="{Binding DeleteDisabledCommand}" />
    </UserControl.InputBindings>


    
    <Border KeyboardNavigation.TabNavigation="None" Focusable="False" CornerRadius="5,5,5,5" 
            BorderThickness="2" 
            Height="auto">
        <Grid Margin="5" Focusable="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" KeyboardNavigation.DirectionalNavigation="None">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="50" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Channel.Name}" FontSize="18" />
                <Border Grid.Row="1" HorizontalAlignment="Center" MinWidth="200" Margin="5" CornerRadius="1,1,1,1">
                    <Grid Margin="10" Width="auto" >
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <FrameworkElement x:Name="ConverterHelper" DataContext="{Binding Channel.VideoFormat}" />
                            <TextBlock Text="Current time" Grid.Row="0" />

                            <controls:Timecode Grid.Row="1"
                                               VideoFormat="{Binding Channel.VideoFormat, UpdateSourceTrigger=PropertyChanged}"
                                               Time="{Binding DisplayTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                               EnterPressedCommand="{Binding DisplayTimecodeEditCommand}"
                                               Background="Transparent" 
                                               TextAlignment="Right" 
                                               FontSize="20"
                                               BorderThickness="0"    
                                               >
                                <controls:Timecode.Style>
                                    <Style TargetType="{x:Type controls:Timecode}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding PlayerItem.IsLoaded}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:Timecode.Style>
                            </controls:Timecode>
                        </Grid>
                        <Grid Margin="0,5,0,0" Grid.Row="1" Width="auto">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Text="Time left" Grid.Row="0" />
                            <controls:Timecode Grid.Row="1"
                                               VideoFormat="{Binding Channel.VideoFormat, UpdateSourceTrigger=PropertyChanged}"
                                               Time="{Binding OutTime, UpdateSourceTrigger=PropertyChanged}"
                                               IsReadOnly="True"
                                               Background="Transparent" 
                                               TextAlignment="Right" 
                                               FontSize="20"
                                               BorderThickness="0">
                                <controls:Timecode.Style>
                                    <Style TargetType="{x:Type controls:Timecode}" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding PlayerItem.IsLoaded}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:Timecode.Style>
                            </controls:Timecode>
                        </Grid>
                    </Grid>
                </Border>
                <Grid Margin="10" Grid.Row="2" Width="250">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Margin" Value="5 0"/>
                        </Style>
                    </Grid.Resources>

                    <Button Grid.Column="0" Command="{Binding UnloadCommand}" >
                        <Control.ToolTip>
                            <ToolTip Content="PAUSE/BREAK to unload" />
                        </Control.ToolTip>
                    </Button>

                    <Button Grid.Column="1" Command="{Binding TogglePlayCommand}">
                        <Control.ToolTip>
                            <ToolTip Content="SPACE to toggle play/pause" />
                        </Control.ToolTip>
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Content" >
                                    <Setter.Value>
                                        <mah:FontIcon Glyph="&#xE768;"/>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                        <Setter Property="Content" >
                                            <Setter.Value>
                                                <mah:FontIcon Glyph="&#xE769;"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Grid.Column="2" Command="{Binding NextCommand}" >
                        <Control.ToolTip>
                            <ToolTip Content="END to cue next item" />
                        </Control.ToolTip>
                        <mah:FontIcon Glyph="&#xE893;"/>
                    </Button>
                </Grid>
                <Grid Focusable="False" Grid.Row="3">
                    <controls:Seekbar IsMoveToPointEnabled="True" 
                            Margin="5" 
                            Maximum="{Binding PlayerItem.Duration.TotalMilliseconds, UpdateSourceTrigger=PropertyChanged}" 
                            SliderDragStartCommand="{Binding SliderDragStartCommand}"
                            Value="{Binding Seekbar, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Delay=20}">
                    </controls:Seekbar>
                </Grid>
                <Border HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="LightGray" BorderThickness="2" Grid.Row="4" >
                    <Image Margin="5" Source="{Binding PlayerItem.BrowserItem.Thumbnail}" />
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PlayerItem.IsLoaded}" Value="true">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Button Focusable="False" Command="{Binding DeleteDisabledCommand}" VerticalAlignment="Top" HorizontalAlignment="Right" >
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Margin="5,0,0,0" Text="Remove played" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <ListView x:Name="listView" Focusable="False" Grid.Row="1" Margin="0 5"
                          ItemsSource="{Binding Rundown}" 
                          >
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="{x:Type vm:RundownItemViewModel}">
                            <view:RundownItemView/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.InputBindings>
                        <KeyBinding Modifiers="Ctrl" Key="Return" Command="{Binding LoadSelectedMediaCommand}" />
                    </ListView.InputBindings>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}" >
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="attachedProp:EventToCommand.MouseDoubleClickCommand" Value="{Binding DataContext.LoadMediaCommand, ElementName=listView}" />
                            <Setter Property="attachedProp:EventToCommand.MouseRightButtonUpCommand" Value="{Binding DataContext.CheckItemCommand, ElementName=listView}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>

            </Grid>
        </Grid>
    </Border>
</UserControl>
