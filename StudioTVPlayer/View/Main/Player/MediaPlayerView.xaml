<UserControl x:Class="StudioTVPlayer.View.Main.Player.MediaPlayerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"             
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:view="clr-namespace:StudioTVPlayer.View.Main.Player"
             xmlns:attachedProp="clr-namespace:StudioTVPlayer.Helpers.AttachedProperties"
             xmlns:controls="clr-namespace:StudioTVPlayer.Controls"
             xmlns:vm="clr-namespace:StudioTVPlayer.ViewModel.Main.Player"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance vm:MediaPlayerViewModel}"
             d:DesignHeight="370" d:DesignWidth="800"
             attachedProp:ControlProperties.TakesInputBindingPrecedence="True"
             attachedProp:ControlProperties.EnableIsKeyboardFocusWithin="True"
             Focusable="True" IsTabStop="True"
             BorderThickness="2"
             Margin="3"
             FocusVisualStyle="{x:Null}"
             >
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Control.Validation}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>

    <UserControl.InputBindings>
        <KeyBinding Modifiers="Shift" Key="Left" Command="{Binding SeekFramesCommand}" CommandParameter="-1" />
        <KeyBinding Modifiers="Shift" Key="Right" Command="{Binding SeekFramesCommand}" CommandParameter="1" />
        <KeyBinding Modifiers="Ctrl" Key="Left" Command="{Binding SeekFramesCommand}" CommandParameter="-second" />
        <KeyBinding Modifiers="Ctrl" Key="Right" Command="{Binding SeekFramesCommand}" CommandParameter="second" />
        <KeyBinding Modifiers="Ctrl" Key="PageUp" Command="{Binding CueCommand}" />
        <KeyBinding Key="Space" Command="{Binding TogglePlayCommand}" />
        <KeyBinding Modifiers="Alt" Key="PageDown" Command="{Binding LoadNextItemCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="Pause" Command="{Binding UnloadCommand}" />
        <KeyBinding Modifiers="Alt" Key="Delete" Command="{Binding DeleteDisabledCommand}" />
    </UserControl.InputBindings>

    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" KeyboardNavigation.DirectionalNavigation="None"
              dd:DragDrop.IsDropTarget="True"
              dd:DragDrop.DropHandler="{Binding}" 
              Background="Transparent"
              >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="52" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding Name}" FontSize="18" />
            <Grid Grid.Row="1" Margin="10" MinWidth="200">
                <Grid.Resources>
                    <Style TargetType="controls:TimecodeEdit" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="FontSize" Value="20"/>
                        <Setter Property="TextAlignment" Value="Center"/>
                        <Setter Property="VideoFormat" Value="{Binding VideoFormat}"/>
                        <Setter Property="Padding" Value="2"/>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="115"/>
                </Grid.ColumnDefinitions>
                <Slider Orientation="Vertical" Grid.RowSpan="2" Minimum="-15" Maximum="15" HorizontalAlignment="Left" 
                        AutoToolTipPlacement="BottomRight"
                        AutoToolTipPrecision="1"
                        Value="{Binding Volume}" 
                        >
                    <Slider.ToolTip>
                        <TextBlock Text="{Binding Volume, StringFormat={}Volume: {0:F1}}"/>
                    </Slider.ToolTip>
                </Slider>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <FrameworkElement x:Name="ConverterHelper" DataContext="{Binding VideoFormat}" />
                    <TextBlock Text="Current time" Grid.Row="0" />
                    <controls:TimecodeEdit Grid.Row="1" BorderThickness="0.7" mah:ControlsHelper.CornerRadius="3" 
                                           Time="{Binding DisplayTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                           EnterPressedCommand="{Binding DisplayTimecodeEditCommand}"
                                           />
                </Grid>
                <Grid Margin="0,5,0,0" Grid.Column="1" Grid.Row="1" Width="auto">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Text="Time left" Grid.Row="0" />
                    <controls:TimecodeEdit Grid.Row="1" BorderThickness="0" 
                                           Time="{Binding OutTime}"
                                           IsReadOnly="True"
                                           />
                </Grid>
            </Grid>
            <UniformGrid Margin="10 9" Grid.Row="2" Columns="4">
                <UniformGrid.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Margin" Value="5 0"/>
                        <Setter Property="Focusable" Value="False"/>
                    </Style>

                </UniformGrid.Resources>

                <Button Command="{Binding CueCommand}" >
                    <Control.ToolTip>
                        <ToolTip Content="Cue | Alt+PageUp" />
                    </Control.ToolTip>
                    <mah:FontIcon Glyph="&#xE892;"/>
                </Button>

                <Button Command="{Binding UnloadCommand}" >
                    <Control.ToolTip>
                        <ToolTip Content="Clear | Ctrl+Pause/Break" />
                    </Control.ToolTip>
                    <mah:FontIcon Glyph="&#xE71A;"/>
                </Button>

                <Button Command="{Binding TogglePlayCommand}">
                    <Control.ToolTip>
                        <ToolTip Content="Toggle play/pause | Space" />
                    </Control.ToolTip>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Content" >
                                <Setter.Value>
                                    <mah:FontIcon Glyph="&#xE768;"/>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                    <Setter Property="Content" >
                                        <Setter.Value>
                                            <mah:FontIcon Glyph="&#xE769;"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Command="{Binding LoadNextItemCommand}" >
                    <Control.ToolTip>
                        <ToolTip Content="Cue next | Alt+PageDown" />
                    </Control.ToolTip>
                    <mah:FontIcon Glyph="&#xE893;"/>
                </Button>
            </UniformGrid>
            <Slider Grid.Row="4" Margin="5" IsMoveToPointEnabled="True" 
                    IsEnabled="{Binding IsLoaded}"
                    Minimum="{Binding CurrentItemStartTime.TotalMilliseconds}"
                    Maximum="{Binding CurrentItemDuration.TotalMilliseconds}" 
                    Thumb.DragStarted="Slider_DragStarted"
                    Thumb.DragCompleted="Slider_DragCompleted"
                    Value="{Binding SliderPosition, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            </Slider>
            <Border Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="{DynamicResource MahApps.Brushes.Control.Border}" BorderThickness="1"  >
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoaded}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Image Margin="5" Height="110" Source="{Binding CurrentRundownItem.RundownItem.Media.Thumbnail}" />
            </Border>
        </Grid>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Label VerticalAlignment="Bottom" >Rundown</Label>
            <Button Command="{Binding DeleteDisabledCommand}" VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="14" FontWeight="Normal" ToolTip="Alt + Del" >
                <StackPanel Orientation="Horizontal">
                    <mah:FontIcon Glyph="&#xE74D;"/>
                    <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">Remove played</TextBlock>
                </StackPanel>
            </Button>

            <ListBox x:Name="list" Grid.Row="1" Margin="0 5" BorderThickness="1"
                     ItemsSource="{Binding Rundown}" SelectedItem="{Binding SelectedRundownItem}" 
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     BorderBrush="{DynamicResource MahApps.Brushes.Control.Border}" 
                     dd:DragDrop.IsDropTarget="True"
                     dd:DragDrop.IsDragSource="True"
                     dd:DragDrop.DropHandler="{Binding}" 
                     dd:DragDrop.UseDefaultDragAdorner="True"
                     dd:DragDrop.DragAdornerTemplate="{StaticResource mediaDragTemplate}"
                     >
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:RundownItemViewModel}">
                        <view:RundownItemView/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.InputBindings>
                    <KeyBinding Modifiers="Ctrl" Key="Return" Command="{Binding LoadSelectedMediaCommand}" />
                </ListBox.InputBindings>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="attachedProp:EventToCommand.MouseDoubleClickCommand" Value="{Binding DataContext.LoadMediaCommand, ElementName=list}" />
                        <Setter Property="attachedProp:EventToCommand.MouseRightButtonDownCommand" Value="{Binding DataContext.CheckItemCommand, ElementName=list}" />
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>

        </Grid>
    </Grid>
</UserControl>
