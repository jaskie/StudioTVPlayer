<mah:MetroWindow x:Class="StudioTVPlayer.View.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                 xmlns:mainViewModels="clr-namespace:StudioTVPlayer.ViewModel.Main"
                 xmlns:rootViewModels="clr-namespace:StudioTVPlayer.ViewModel"
                 xmlns:mainViews="clr-namespace:StudioTVPlayer.View.Main"
                 xmlns:configurationViews="clr-namespace:StudioTVPlayer.View.Configuration"
                 xmlns:configurationViewModels="clr-namespace:StudioTVPlayer.ViewModel.Configuration"
                 mc:Ignorable="d"
                 d:DataContext="{d:DesignInstance {x:Type rootViewModels:MainViewModel}}"
                 Title="Studio TVPlayer" 
                 Height="1024" Width="1280"
                 TitleCharacterCasing="Normal"
                 ShowSystemMenu="True"
                 dialogs:DialogParticipation.Register="{Binding}"
                 Loaded="MetroWindow_Loaded"
                 TitleAlignment="Center"
                 >
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button ToolTip="Configuration" Command="{Binding ConfigurationCommand}">
                <mah:FontIcon Glyph="&#xE713;" />
            </Button>
            <mah:DropDownButton Visibility="{Binding IsControllerStatusVisible, Converter={StaticResource BoolToVisibilityConverter}}" ItemsSource="{Binding PlayerControllers}" >
                <mah:DropDownButton.Style>
                    <Style TargetType="mah:DropDownButton" BasedOn="{StaticResource MahApps.Styles.DropDownButton.WindowCommands}">
                        <Setter Property="Foreground" Value="DarkRed"/>
                        <Setter Property="ToolTip" Value="Not all playout controllers are connected.&#x0a;Check their status against configuration."/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AllPlayerControllersConnected}" Value="True">
                                <Setter Property="Foreground" Value="DarkGreen" />
                                <Setter Property="ToolTip" Value="All playout controllers are connected"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </mah:DropDownButton.Style>
                <mah:DropDownButton.Content>
                    <mah:FontIcon Glyph="&#xEA3B;" />
                </mah:DropDownButton.Content>
                <mah:DropDownButton.ItemTemplate>
                    <DataTemplate DataType="{x:Type rootViewModels:PlayerControllerViewModel}" >
                        <MenuItem Style="{StaticResource MahApps.Styles.MenuItem}">
                            <MenuItem.Icon>
                                <mah:FontIcon Glyph="&#xEA3B;" >
                                    <mah:FontIcon.Style>
                                        <Style TargetType="mah:FontIcon">
                                            <Setter Property="Foreground" Value="Red"/>
                                            <Setter Property="ToolTip" Value="Connected" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                                    <Setter Property="Foreground" Value="DarkGreen"/>
                                                    <Setter Property="ToolTip" Value="Disonnected" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </mah:FontIcon.Style>
                                </mah:FontIcon>
                            </MenuItem.Icon>
                            <MenuItem.Header>
                                <TextBlock Text="{Binding Name}" />
                            </MenuItem.Header>
                        </MenuItem>
                    </DataTemplate>
                </mah:DropDownButton.ItemTemplate>
            </mah:DropDownButton>
            <Button ToolTip="Help" Command="{Binding HelpCommand}">
                <mah:FontIcon Glyph="&#xE9CE;" />
            </Button>
            <Button ToolTip="About" Command="{Binding AboutCommand}">
                <mah:FontIcon Glyph="&#xE946;" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <ToggleButton IsChecked="{Binding IsPlayoutVisible}" IsEnabled="{Binding IsConfigutationViewActive, Converter={StaticResource InvertedBooleanConverter}}">Players</ToggleButton>
            <ToggleButton IsChecked="{Binding IsRecordingSchedulerVisible}" IsEnabled="{Binding IsConfigutationViewActive,Converter={StaticResource InvertedBooleanConverter}}">Scheduler</ToggleButton>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>
    <Window.InputBindings>
        <KeyBinding Gesture="Shift+Ctrl+E" Command="{Binding ConfigurationCommand}"/>
    </Window.InputBindings>
    <ContentControl Content="{Binding CurrentViewModel}" >
        <ContentControl.Resources>
            <DataTemplate DataType="{x:Type mainViewModels:PlayoutViewModel}">
                <mainViews:PlayoutView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type configurationViewModels:ConfigurationViewModel}">
                <configurationViews:ConfigurationView />
            </DataTemplate>
        </ContentControl.Resources>
    </ContentControl>
</mah:MetroWindow>
